/* -- do not edit following lines - START --
{
  "debug": false,
  "verbose": true
}
-- do not edit previous lines - END --*/
var pingGrp = 'ping.0';
var pingGrpAll = pingGrp + '.*';
var relayOff = 0;

var PingConfig = [
    '{"id":1, "DeviceName": "Board0", "Pin":20}'
    ,'{"id":2, "DeviceName": "Board1", "Pin":21}'
    ];   
var gpioArray = [];

var gpio = require("gpio");

PingConfig.forEach(function(item, i, arr) {
    x = JSON.parse(item);
//    log("x.pin=" + x.Pin);
    gpioArray[i] = gpio.export(x.Pin,{ direction: 'out'}); 
}); 

function resetDevice(i, devName) {
  log("Reset device:" + devName);
  gpioArray[i].set(relayOff);
  log("Delay for 2 sec");
  setTimeout(function(){
      log("Start device:"+devName);
      gpioArray[i].set(1-relayOff);
  }, 2000);
}

var pingGroup = $(pingGrpAll);
pingGroup.on (function(obj) {
    log("Dev state changes detected:" + obj.id);
    if (!obj.newState.val) {
       log("Device should be restarted");
        PingConfig.forEach(function(item, i, arr){
            log("item=" + item);
            var pConfig = JSON.parse(item);
            //log("pConfig.DeviceName="+pConfig.DeviceName);
            if (obj.name == pConfig.DeviceName) { //should be restarted
                //log("Found:" + pConfig.DeviceName);
                resetDevice(i, pConfig.DeviceName);                
                return;
            }
        });
   }
   log("End Dev change Request"); 
});
